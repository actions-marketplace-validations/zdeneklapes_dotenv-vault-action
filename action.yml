---
name: "Download .env.${STAGE} from dotenv-vault"
description: "Download .env.${STAGE} from dotenv-vault and move it to .env"
author: "Zdenek Lapes"
inputs:
  stage:
    description: "Stage to download .env from dotenv-vault"
    required: true
    default: "ci"
  move:
    description: "Move .env.${STAGE} to .env"
    required: false
    default: "true"
  dotenvMe:
    description: "dotenv-vault token"
    required: true
  load:
    description: "Load .env.${STAGE} to environment"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - uses: actions/cache@v4
      with:
        path: |
          /root/.npm
          /usr/local/lib/node
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules-
#    - run: npx -y dotenv-vault@latest pull ci --dotenvMe=${{ inputs.dotenvMe }} --yes
#    - run: npx -y dotenv-vault@latest pull ${{ inputs.stage }} --dotenvMe=${{ secrets.DOTENV_ME }} --yes
    - run: npx -y dotenv-vault@latest pull ${{ inputs.stage }} --dotenvMe=${{ inputs.dotenvMe }} --yes
      shell: bash
    - run: mv .env.ci .env
      if: ${{ inputs.move == 'true' }}
      shell: bash
    - run: export $(cat .env | grep --invert-match "^#" | xargs)
      if: ${{ inputs.load == 'true' }}
      shell: bash


